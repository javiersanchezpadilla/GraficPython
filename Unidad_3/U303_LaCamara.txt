OpenGL usa diferentes "modos" o "matrices" para aplicar sus transformaciones. 

Es como si el programa tuviera varios lienzos diferentes para dibujar, y tú tienes que elegir 
en cuál quieres trabajar en cada momento.

Entendiendo la "cámara" en 3D
1. glMatrixMode(GL_PROJECTION): Configurando la cámara
Cuando le dices a OpenGL glMatrixMode(GL_PROJECTION), le estás diciendo: "Oye, a partir de ahora, 
todo lo que haga con las transformaciones no es para mover, rotar o escalar objetos. Es para configurar 
mi cámara, la forma en que voy a ver el mundo".

Es como si estuvieras eligiendo la lente de tu cámara fotográfica.

2. gluPerspective(45, (800/600), 0.1, 50.0): La lente de la cámara
Este comando es el que realmente configura esa lente. Le dice a OpenGL qué tipo de vista quieres:

45: El ángulo de visión (Field of View o FOV). Un ángulo de 45 grados es un valor común, similar a lo 
que el ojo humano ve. Un ángulo más grande sería como usar una lente de gran angular, y uno más pequeño como un zoom.

(800/600): La relación de aspecto de la ventana. Esto asegura que el mundo 3D no se vea estirado o comprimido.

0.1 y 50.0: Los planos de recorte. OpenGL solo dibujará los objetos que estén entre 0.1 y 50.0 unidades de distancia 
de la cámara. Todo lo que esté fuera de ese rango no se mostrará.

3. glMatrixMode(GL_MODELVIEW): Volviendo al mundo real
Después de que has terminado de configurar la cámara, le dices a OpenGL glMatrixMode(GL_MODELVIEW). Esto es como si 
dijeras: "Listo, ya elegí mi lente. Ahora, volvamos a mover y rotar los objetos dentro del mundo 3D".

A partir de este momento, cualquier glTranslatef(), glRotatef() o glScalef() que uses se aplicará a los objetos que 
dibujes, y no a la cámara.


RESUMEN RAPIDO:

Piensa en las dos matrices como si fueran dos mundos distintos:

Matriz de Proyección: El mundo de la cámara. Solo te sirve para decidir cómo vas a ver el mundo.
Matriz de Modelo-Vista: El mundo de los objetos. Solo te sirve para decidir dónde están los objetos en ese mundo.